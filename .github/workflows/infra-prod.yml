name: terraform-prod

on:
  push:
    branches: ["main"]
    paths:
      - "infra/**"
      - ".github/workflows/infra-prod.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "infra/**"
      - ".github/workflows/infra-prod.yml"
  workflow_dispatch:
    inputs:
      apply:
        description: "Set to true to run terraform apply"
        required: false
        default: "false"

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: infra
  TF_ENV: prod
  TF_VARS_FILE: infra/envs/prod/terraform.tfvars
  TF_BACKEND_CONFIG: infra/envs/prod/backend.hcl

jobs:
  terraform-plan:
    if: github.event_name == 'pull_request'
    name: terraform-plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -backend-config=${{ env.TF_BACKEND_CONFIG }}

      - name: Terraform Fmt
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check -recursive

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var-file=${{ env.TF_VARS_FILE }} -out=tfplan.out

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: infra/tfplan.out

  terraform-apply:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.apply == 'true'
    name: terraform-apply
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -backend-config=${{ env.TF_BACKEND_CONFIG }}

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -var-file=${{ env.TF_VARS_FILE }} -auto-approve
